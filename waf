import tkinter as tk
import random

class TournamentScoringSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Tournament Scoring System")
        
        self.num_teams = 4
        self.team_size = 5
        self.num_individuals = 20
        self.num_events = 5

        self.teams = []
        self.individuals = []

        self.create_widgets()

    def create_widgets(self):
        # Label
        tk.Label(self.root, text="Tournament Scoring System", font=("Helvetica", 16)).grid(row=0, columnspan=2, pady=10)

        # Buttons
        tk.Button(self.root, text="Register Teams", command=self.register_teams).grid(row=1, column=0, padx=10, pady=5)
        tk.Button(self.root, text="Register Individuals", command=self.register_individuals).grid(row=1, column=1, padx=10, pady=5)
        tk.Button(self.root, text="Run Tournament", command=self.run_tournament).grid(row=2, column=0, columnspan=2, padx=10, pady=5)

    def register_teams(self):
        # Create a new window for registering teams
        team_window = tk.Toplevel(self.root)
        team_window.title("Register Teams")

        # Label
        tk.Label(team_window, text="Enter team names and members", font=("Helvetica", 12)).grid(row=0, columnspan=2, pady=10)

        # Entry fields for team names and members
        for i in range(self.num_teams):
            tk.Label(team_window, text=f"Team {i+1} Name:").grid(row=i+1, column=0, padx=10, pady=5)
            tk.Entry(team_window).grid(row=i+1, column=1, padx=10, pady=5)

            for j in range(self.team_size):
                tk.Label(team_window, text=f"Member {j+1}:").grid(row=i+self.num_teams+j+2, column=0, padx=10, pady=5)
                tk.Entry(team_window).grid(row=i+self.num_teams+j+2, column=1, padx=10, pady=5)

        # Button to submit teams
        tk.Button(team_window, text="Submit", command=team_window.destroy).grid(row=self.num_teams*2+self.team_size+2, columnspan=2, pady=10)

    def register_individuals(self):
        # Create a new window for registering individuals
        individual_window = tk.Toplevel(self.root)
        individual_window.title("Register Individuals")

        # Label
        tk.Label(individual_window, text="Enter individual names", font=("Helvetica", 12)).grid(row=0, column=0, pady=10)

        # Entry fields for individual names
        for i in range(self.num_individuals):
            tk.Label(individual_window, text=f"Individual {i+1}:").grid(row=i+1, column=0, padx=10, pady=5)
            tk.Entry(individual_window).grid(row=i+1, column=1, padx=10, pady=5)

        # Button to submit individuals
        tk.Button(individual_window, text="Submit", command=individual_window.destroy).grid(row=self.num_individuals+1, columnspan=2, pady=10)

    def run_tournament(self):
        # Simulate running the tournament
        event_results = {}
        for i in range(self.num_events):
            event_results[f"Event {i+1}"] = {}
            for team in self.teams:
                event_results[f"Event {i+1}"][team] = random.randint(1, 10)
            for individual in self.individuals:
                event_results[f"Event {i+1}"][individual] = random.randint(1, 10)

        # Display results
        results_window = tk.Toplevel(self.root)
        results_window.title("Tournament Results")
        tk.Label(results_window, text="Tournament Results", font=("Helvetica", 12)).grid(row=0, columnspan=2, pady=10)

        for event, results in event_results.items():
            tk.Label(results_window, text=f"{event}:", font=("Helvetica", 10, "bold")).grid(row=len(event_results)+1, columnspan=2)
            row_num = len(event_results)+2
            for participant, score in results.items():
                tk.Label(results_window, text=f"{participant}: {score}").grid(row=row_num, column=0, padx=10)
                row_num += 1

if __name__ == "__main__":
    root = tk.Tk()
    app = TournamentScoringSystem(root)
    root.mainloop()

